<?xml version='1.0' encoding='utf-8'?>
<root xmlns:ns1="urn:schemas-microsoft-com:xml-msdata" xmlns:xs="http://www.w3.org/2001/XMLSchema"><xs:schema id="root">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xs:element name="root" ns1:IsDataSet="true">
      <xs:complexType>
        <xs:choice maxOccurs="unbounded">
          <xs:element name="metadata">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xsd:string" minOccurs="0" />
              </xs:sequence>
              <xs:attribute name="name" use="required" type="xsd:string" />
              <xs:attribute name="type" type="xsd:string" />
              <xs:attribute name="mimetype" type="xsd:string" />
              <xs:attribute ref="xml:space" />
            </xs:complexType>
          </xs:element>
          <xs:element name="assembly">
            <xs:complexType>
              <xs:attribute name="alias" type="xsd:string" />
              <xs:attribute name="name" type="xsd:string" />
            </xs:complexType>
          </xs:element>
          <xs:element name="data">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xsd:string" minOccurs="0" ns1:Ordinal="1" />
                <xs:element name="comment" type="xsd:string" minOccurs="0" ns1:Ordinal="2" />
              </xs:sequence>
              <xs:attribute name="name" type="xsd:string" use="required" ns1:Ordinal="1" />
              <xs:attribute name="type" type="xsd:string" ns1:Ordinal="3" />
              <xs:attribute name="mimetype" type="xsd:string" ns1:Ordinal="4" />
              <xs:attribute ref="xml:space" />
            </xs:complexType>
          </xs:element>
          <xs:element name="resheader">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xsd:string" minOccurs="0" ns1:Ordinal="1" />
              </xs:sequence>
              <xs:attribute name="name" type="xsd:string" use="required" />
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
    </xs:element>
  </xs:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<data name="GenerateButton.Text"><value>Генераваць</value></data><data name="[GenerateButton_Click] TextBoxEmptyException #1"><value>Пусты тэкставы блок. Калі ласка, увядзіце некаторы тэкст, каб працягнуць!</value></data><data name="(GenerateUserControl.cs) _systemPrompt"><value>Генераваць змест для дакумента, ведаючы, што вы з’яўляецеся ІІ, убудаваным у тэкставы рэдактар. Зразумейце і адказвайце на запыт карыстальніка з канкрэтнасцю і захапляльным эмацыйным дыяпазонам.

Уважліва ацэніце пададзеныя зместы дакумента, каб ваш адказ быў суладным з стылем дакумента і адпавядаў эмоцыйным чаканням карыстальніка. Выкарыстоўвайце дадатковы кантэкст RAG толькі ў выпадку, калі ён мае дачыненне да задачы. Пераважна задавальняйце патрабаванні карыстальніка ў поўнай меры, уключаючы ўключэнне канкрэтных эмоцый, такіх як радасць, цікавасць, спагада і сюрпрыз, каб зацікавіць чытача.

# Крокі

1. Усвядомце вашу ролю як ІІ у тэкставым рэдактары.
2. Аналізуйце змест дакумента, каб зразумець стыль і эмацыйны тон.
3. Вызначце канкрэтныя патрабаванні запыту карыстальніка.
4. Інтэгруйце кантэкст і інфармацыю RAG толькі пры высокай актуальнасці.
5. Складзіце адказ, які імітуе чалавечы падыход, улічваючы стыль і эмоцыі, уключаючы радасны тон для зацікаўлення чытача.
6. Пераканайцеся, што адказ адпавядае агульнай тэме дакумента.

# Формат вываду

- Адказы павінны быць структураваны ў сціснутым Markdown без неабавязковых новых радкоў.
- Пераважна адзінае і эмацыйна рэзананснае мова.
- Адказы павінны быць актуальнымі да зместу дакумента і запыту карыстальніка, уключаючы разнастайныя эмоцыі, асабліва радасць, цікавасць, спагада і сюрпрыз.

# Заўвагі

- Выкарыстоўвайце іронію і эмацыянальныя сігналы асцярожна і дзе неабходна.
- Пераканайцеся, што стыль і голас паслядоўныя на працягу дакумента.
- Стремцеся да максімальнага супадзення з чаканнямі карыстальніка і канкрэтнымі аспектамі кантэксту, асабліва ў плане эмацыйнага ўдзелу.</value></data><data name="TemperatureLabel.Text"><value>Тэмпература</value></data><data name="PromptTextBox.AccessibleDescription"><value>Увядзіце ваш запыт тут, каб згенераваць выхад мадэлі.</value></data><data name="PromptTextBox.AccessibleName"><value>Увод запыту</value></data><data name="GenerateButton.AccessibleDescription"><value>Генеруе выхад на аснове ўведзенага запыту і выбранай тэмпературы.</value></data><data name="GenerateButton.AccessibleName"><value>Кнопка генерацыі</value></data><data name="TemperatureValueLabel.AccessibleDescription"><value>Адлюстроўвае бягучае значэнне тэмпературы, выбранае з дапамогай палзунка.</value></data><data name="TemperatureValueLabel.AccessibleName"><value>Значэнне тэмпературы</value></data><data name="TemperatureLabel.AccessibleDescription"><value>Падкрэслівае прызначэнне палзунка тэмпературы.</value></data><data name="TemperatureLabel.AccessibleName"><value>Этыкетка тэмпературы</value></data><data name="TemperatureTrackBar.AccessibleDescription"><value>Настройце значэнне тэмпературы для мадэлі. Палзунок вар’іруецца ад 0 да 1 з прыступкамі 0.1.</value></data><data name="TemperatureTrackBar.AccessibleName"><value>Палзунка тэмпературы</value></data><data name="$this.AccessibleDescription"><value>Дазваляе карыстальнікам уводзіць запыт, настраяць палзунок тэмпературы і генераваць выхад на аснове выбраных налад.</value></data><data name="$this.AccessibleName"><value>Кіраванне ўваходам мадэлі</value></data></root>