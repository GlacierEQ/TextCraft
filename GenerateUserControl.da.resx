<?xml version='1.0' encoding='utf-8'?>
<root xmlns:ns1="urn:schemas-microsoft-com:xml-msdata" xmlns:xs="http://www.w3.org/2001/XMLSchema"><xs:schema id="root">
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xs:element name="root" ns1:IsDataSet="true">
      <xs:complexType>
        <xs:choice maxOccurs="unbounded">
          <xs:element name="metadata">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xsd:string" minOccurs="0" />
              </xs:sequence>
              <xs:attribute name="name" use="required" type="xsd:string" />
              <xs:attribute name="type" type="xsd:string" />
              <xs:attribute name="mimetype" type="xsd:string" />
              <xs:attribute ref="xml:space" />
            </xs:complexType>
          </xs:element>
          <xs:element name="assembly">
            <xs:complexType>
              <xs:attribute name="alias" type="xsd:string" />
              <xs:attribute name="name" type="xsd:string" />
            </xs:complexType>
          </xs:element>
          <xs:element name="data">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xsd:string" minOccurs="0" ns1:Ordinal="1" />
                <xs:element name="comment" type="xsd:string" minOccurs="0" ns1:Ordinal="2" />
              </xs:sequence>
              <xs:attribute name="name" type="xsd:string" use="required" ns1:Ordinal="1" />
              <xs:attribute name="type" type="xsd:string" ns1:Ordinal="3" />
              <xs:attribute name="mimetype" type="xsd:string" ns1:Ordinal="4" />
              <xs:attribute ref="xml:space" />
            </xs:complexType>
          </xs:element>
          <xs:element name="resheader">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="value" type="xsd:string" minOccurs="0" ns1:Ordinal="1" />
              </xs:sequence>
              <xs:attribute name="name" type="xsd:string" use="required" />
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
    </xs:element>
  </xs:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<data name="GenerateButton.Text"><value>Generer</value></data><data name="[GenerateButton_Click] TextBoxEmptyException #1"><value>Tom tekstboks. Skriv noget tekst for at fortsætte!</value></data><data name="(GenerateUserControl.cs) _systemPrompt"><value>Generer indhold til et dokument, og forstå at du er en AI indlejret i en tekstbehandler. Forstå og svar på brugerens prompt med specificitet og en fængslende følelsesmæssig rækkevidde.

Vurder de angivne dokumentindhold nøje, og sørg for at dit svar er sammenhængende med dokumentets stil og opfylder brugerens følelsesmæssige forventninger. Brug yderligere RAG-kontekst kun hvis den er relevant for opgaven. Prioriter at imødekomme brugerens krav fuldt ud, herunder at inkorporere specificerede følelser såsom glæde, nysgerrighed, empati og overraskelse for at engagere læseren.

# Skridt

1. Genkend din rolle som AI inden for en tekstbehandler.
2. Analysér dokumentindholdet for at forstå stilen og den følelsesmæssige tone.
3. Identificer brugerforespørgsels specifikationer og krav.
4. Integrér kontekst og RAG-information kun hvis det er meget relevant.
5. Udform et svar, der efterligner et menneskeligt præg, tager højde for stil og følelser, mens du integrerer en glad tone for at engagere læseren.
6. Sørg for at svaret er i overensstemmelse med det overordnede tema i dokumentet.

# Output Format

- Svarene skal struktureres i kompakt Markdown uden unødvendige linjeskift.
- Prioriter sammenhængende og følelsesmæssigt resonant sprog.
- Svarene skal være relevante for dokumentindholdet og brugerforespørgslen, og inkorporere varierede følelser, især glæde, nysgerrighed, empati og overraskelse.

# Noter

- Brug sarkasme og følelsesmæssige signaler følsomt og hvor passende.
- Sørg for at stilen og stemmen er konsistent gennem hele dokumentet.
- Mål efter maksimal tilpasning til brugerens forventninger og kontekst specifik, især med hensyn til følelsesmæssig engagement.</value></data><data name="TemperatureLabel.Text"><value>Temperatur</value></data><data name="PromptTextBox.AccessibleDescription"><value>Indtast din prompt her for at generere modellens output.</value></data><data name="PromptTextBox.AccessibleName"><value>Prompt Input</value></data><data name="GenerateButton.AccessibleDescription"><value>Genererer output baseret på input prompt og valgt temperatur.</value></data><data name="GenerateButton.AccessibleName"><value>Generer knap</value></data><data name="TemperatureValueLabel.AccessibleDescription"><value>Viser den aktuelle temperaturværdi valgt med skyderen.</value></data><data name="TemperatureValueLabel.AccessibleName"><value>Temperaturværdi</value></data><data name="TemperatureLabel.AccessibleDescription"><value>Angiver formålet med temperatur skyderen.</value></data><data name="TemperatureLabel.AccessibleName"><value>Temperaturlabel</value></data><data name="TemperatureTrackBar.AccessibleDescription"><value>Justér temperaturværdien for modellen. Skyderen spænder fra 0 til 1 i intervaller af 0.1.</value></data><data name="TemperatureTrackBar.AccessibleName"><value>Temperaturslider</value></data><data name="$this.AccessibleDescription"><value>Giver brugerne mulighed for at indtaste en prompt, justere temperaturskyderen og generere output baseret på de valgte indstillinger.</value></data><data name="$this.AccessibleName"><value>Modelindgangskontrol</value></data></root>