<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="this.ForgeTab.Label" xml:space="preserve">
    <value>生成</value>
  </data>
  <data name="this.ToolsGroup.Label" xml:space="preserve">
    <value>工具</value>
  </data>
  <data name="this.GenerateButton.Label" xml:space="preserve">
    <value>生成</value>
  </data>
  <data name="this.GenerateButton.SuperTip" xml:space="preserve">
    <value>根据用户的提示和当前文档的内容生成定制的响应。</value>
  </data>
  <data name="this.DefaultCheckBox.Label" xml:space="preserve">
    <value>默认</value>
  </data>
  <data name="this.AboutButton.Label" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="this.AboutButton.ScreenTip" xml:space="preserve">
    <value>提供有关此应用程序的详细信息。</value>
  </data>
  <data name="this.CancelButton.Label" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="this.CancelButton.ScreenTip" xml:space="preserve">
    <value>停止文本生成过程。</value>
  </data>
  <data name="this.WritingToolsGallery.Label" xml:space="preserve">
    <value>写作工具</value>
  </data>
  <data name="this.WritingToolsGallery.SuperTip" xml:space="preserve">
    <value>使用 AI 驱动的工具提升您的写作，涵盖语法、风格和清晰度。</value>
  </data>
  <data name="this.ReviewButton.Label" xml:space="preserve">
    <value>审查</value>
  </data>
  <data name="this.ReviewButton.SuperTip" xml:space="preserve">
    <value>用 AI 驱动的评论和建议优化您的文档。</value>
  </data>
  <data name="this.ProofreadButton.Label" xml:space="preserve">
    <value>校对</value>
  </data>
  <data name="this.ProofreadButton.SuperTip" xml:space="preserve">
    <value>检查拼写、语法和风格错误，以打磨您的文档。</value>
  </data>
  <data name="this.RewriteButton.Label" xml:space="preserve">
    <value>重写</value>
  </data>
  <data name="this.RewriteButton.SuperTip" xml:space="preserve">
    <value>使用 AI 驱动的建议修改和增强您的文本。</value>
  </data>
  <data name="this.SettingsGroup.Label" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="this.RAGControlButton.Label" xml:space="preserve">
    <value>RAG 控制</value>
  </data>
  <data name="this.RAGControlButton.SuperTip" xml:space="preserve">
    <value>管理检索增强生成 (RAG) 系统中的文件。</value>
  </data>
  <data name="this.ModelListDropDown.Label" xml:space="preserve">
    <value>模型列表</value>
  </data>
  <data name="this.ModelListDropDown.SuperTip" xml:space="preserve">
    <value>选择 TextCraft 中使用的语言模型。</value>
  </data>
  <data name="this.DefaultCheckBox.SuperTip" xml:space="preserve">
    <value>设置 TextCraft 的默认语言模型。</value>
  </data>
  <data name="this.OptionsGroup.Label" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="this.InfoGroup.Label" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="(ThisAddIn.cs) [InitializeAddIn] ArgumentException #1" xml:space="preserve">
    <value>嵌入模型丢失。请安装以继续!</value>
  </data>
  <data name="[WritingToolsGallery_ButtonClick] ArgumentOutOfRangeException #1" xml:space="preserve">
    <value>未识别所选按钮.</value>
  </data>
  <data name="[ReviewButton_Click] MessageBox #1 (text)" xml:space="preserve">
    <value>审查完成！此文档不需要任何评论。</value>
  </data>
  <data name="[ReviewButton_Click] MessageBox #1 (caption)" xml:space="preserve">
    <value>操作完成!</value>
  </data>
  <data name="(ModelProperties.cs) [GetContextLength] OllamaMissingContextWindowException #1" xml:space="preserve">
    <value>无法获取 {0} 的上下文长度！</value>
  </data>
  <data name="[CommonUtils.cs] (GetInternetAccessPermission) MessageBox #1 Text" xml:space="preserve">
    <value>您是否希望允许 TextCraft 访问以下互联网资源？</value>
  </data>
  <data name="[CommonUtils.cs] (GetInternetAccessPermission) MessageBox #1 Caption" xml:space="preserve">
    <value>互联网接入</value>
  </data>
  <data name="(WordMarkdown.cs) [ApplyMarkdownFormatting] ArgumentOutofRangeException #1" xml:space="preserve">
    <value>未知的 Markdown 处理格式类型!</value>
  </data>
  <data name="(WordMarkdown.cs) [GetCodeBlockAtIndex] ApplicationException #1" xml:space="preserve">
    <value>在索引 {0} 处找不到 Markdown 代码块！</value>
  </data>
  <data name="(WordMarkdown.cs) [ApplyImageFormatting] ArgumentException #1" xml:space="preserve">
    <value>无效的 URL 格式</value>
  </data>
  <data name="(WordMarkdown.cs) [ApplyHeadingFormatting] ArgumentException #1" xml:space="preserve">
    <value>无效的 Markdown 标题：必须包含 1 到 6 个 '#' 字符。</value>
  </data>
  <data name="[AnalyzeText] InvalidRangeException #1" xml:space="preserve">
    <value>未选择要分析的文本!</value>
  </data>
</root>