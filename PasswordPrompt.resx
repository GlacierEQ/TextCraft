<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPXzE/1mC5f1ZguX9WYLl/VmC5f1ZguX9WYLl/VmC
        5f1ZguX9WYLl/VmC5f1ZguX9WYLl/VmC5f1ZguX9WYLl/VG48v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP3TD8WZo6OpOlvn2TpX5/06T+f9Okvj/TpD4/06P
        +P9Ojfj/Toz4/06K+P9Oiff/Tof3/06G9/9Ohvf/Tob3/06G9/9Ohvf/T4b5/1t18/xZsf//AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6gMbtTpv6/06a+f9OmPn/Tpf5/06V
        +f9OlPn/TpL4/06R+P9Oj/j/To74/06M+P9Oivj/Ton3/06H9/9Ohvf/Tob3/06G9/9Oh/j/T4f5/0+G
        +/9atv//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANnq7/U6g+v5On/r/Tp36/06c
        +v9Omvn/Tpn5/06X+f9Olvn/TpT5/06S+f9Okfj/To/4/06O+P9OjPj/Tov4/06J9/9OiPf/Tob3/06G
        9/9Mf+//lYO2/8GMv//ekLnd2KzFogAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1e7r5TqT7/06i
        +v9Oofr/Tp/6/06e+v9OnPr/Tpr6/06Z+f9Ol/n/Tpb5/06U+P9Okvj/TpH4/06Q+P9Ojvj/To34/06L
        +P9Oivf/Toj3/0Rp0f+lirb/27LE/9uyxP/gwc3TAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV7
        uvlOp/v/Tqb7/06k+/9Oovv/TqH6/06f+v9Onvr/Tpz6/0+b+v9SpPr/TYXX/0eI2/9Kku//TpP5/06S
        +P9OkPj/To/4/06N+P9OjPj/QmfM/66Rtv/ctMb/3LTG/+DAzfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAANXu6+U6r+/9Oqfv/Tqf7/06m+/9OpPv/TqP7/06h+v9OoPr/Uqn7/1aCvf9UMUf/UzhS/0OF
        0v9Ol/n/TpX5/06U+f9Okvn/TpH4/06P+P9DbtD/qpC0/9y2x//ctsf/4MHO9AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA1e7r5Tq78/06s/P9Oq/z/Tqn7/06o+/9Opvv/TqX7/06j+/9VsPz/XGyX/1s2
        Sv9VMkf/RXe8/02Z9v9Omfn/Tpf5/06W+f9OlPn/TpP5/0uK8P9/dqj/2bbH/9y4yP/gw8/0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADV7uvlOsfz/TrD8/06u/P9Orfz/Tqv8/06q+/9OqPv/Tqf7/1Wy
        /P9gcJn/YztM/1w2Sv9FeLv/TJ32/06c+v9Om/r/Tpn5/06Y+f9Olvn/Sorq/25snv/RtMT/3bvJ/+HG
        0PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANXu6+U61/f9Os/3/TrL8/06w/P9Or/z/Tq38/06s
        /P9Oqvv/VbT8/2R0mv9qQE7/YjtM/0Z5u/9Mn/b/TqD6/06e+v9Onfr/Tpv6/06a+f9Jiun/enOf/9y8
        yv/dvcr/4cfQ9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1e7r5Trj9/063/f9Otf3/TrT9/06y
        /P9Osfz/Tq/8/0+v/P9cvfr/bmV//3BEUP9oPk7/TWuj/0eX6v9Oo/v/TqL6/06g+v9On/r/Tp36/0uV
        8v9rapz/zbXG/96/zP/iydL0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV7uvlOvP7/Trr9/065
        /f9Ot/3/Trb9/060/f9Os/z/WL39/2+Kqv9+TVX/dUdS/2xBT/9iPVD/Q3/H/02k+P9Opfv/TqP7/06i
        +v9OoPr/QnzT/5uLr//ewc3/3sHN/+LK0/QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANXu6+U6/
        /v9Ovv7/Trz+/067/f9Ouf3/Trj9/062/f9bxP7/d2t+/4BPVv94SVP/b0NQ/2Y9Tf9La6P/SqLy/06o
        +/9Op/v/TqX7/06k+/9Ae83/rZi3/97Bzf/ewc3/4srT9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA1e7r5TsP+/07B/v9OwP7/Tr7+/069/v9Ou/7/Trr9/1nD/v9yf5n/f05W/3hJU/9vRFD/Zz5N/0d4
        uf9Nqfj/Tqz8/06q+/9Oqfv/Tqf7/0B+zf+wmrn/3sHN/97Bzf/iyNLzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADV7uvlOxv//TsX//07D//9Owv7/TsD+/06//v9Ovf7/Ub3+/1+77f9yXnL/dUdS/25E
        Uf9VYY3/RZfk/06x/P9Or/z/Tq78/06s/P9MpfX/fIK3/7Gpx//ewc3/3sHN/97BzfTmzdhIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAANXu6+U7H//9Ox///Tsf//07F//9Ow///TsL+/07A/v9Ov/7/Ur/+/1W/
        +/9Tndj/SpXY/0ad6f9Ns/v/TrT9/06z/f9Osfz/SqPu/4KEtP+6r8j/3sHN/97Bzf/ewc3/3sHN/97B
        zebkydJnAAAAAAAAAAAAAAAAAAAAAAAAAAA1e7r5Tsf//07H//9Ox///Tsf//07H//9Oxf//TsT//07C
        /v9Owf7/Tr/+/069/f9Ou/3/Trv9/065/f9OuP3/Trb9/02z+v89fcT/t566/97Bzf/ewc3/3sHN/97B
        zf/ewc3/3sHN/97Bzezo091vAAAAAAAAAAAAAAAAAAAAADV+vP9Ox//5Tsf//07H//9Ox///Tsf//07H
        //9Ox///Tsb//07E//9Ow/7/TsH+/07A/v9Ovv7/Tr3+/067/v9Ouv3/R6Hm/66Yq//dv8z/3sHN/97B
        zf/ewc3/3sHN/97Bzf/ewc3/3sHN/+bU2q0AAAAAAAAAAAAAAAAAAAAAAAAAADmMyPFOx///Tsf//07H
        //9Ox///Tsf//07H//9Ox///Tsf//07G//9Oxf//TsP//07C/v9OwP7/Tr/+/069/v9Emtz/sJqr/97B
        zf/ewc3/3sHN/97Bzf/ewc3/3sHN/97Bzf/ewc3/59Pa0wAAAAAAAAAAAAAAAAAAAAAAAAAAO6TZsEK6
        6P9J1Pr/SdT6/0nU+v9J1Pr/SdT6/0nU+v9J1Pr/SdT6/0nU+v9J1Pr/SdT6/0nU+v9J1Pr/SdT6/0W7
        6P+xna3/3sHN/97Bzf/ewc3/3sHN/97Bzf/ewc3/3sHN/97Bzf/o1d3aAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAk46P/724uP/Z1NT/x73CMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuR
        lf/GwsL/yMTE/7WfqvTcwMv/3sHN/97Bzf/ews2k18HMi93AzP3ewc3/38TP/+vZ370AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTjo//u7a2/9fO0f/KtME6AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAo5Ob/8nCxP/QzMz/w8PDL8qludfewc3/3sHN/+bN2T3///8B1bTD6t7Bzf/m0Nnx3NHUmwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOOj/+5s7P/1cXM/8msu0cAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACnkp7/y7/D/9jT1P/HwcEpvaOxq9i/ysvdwMz/3sHN092/y7vgxc//5s7Y7N7O
        1aIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk46P/7WwsP/Twsr/xKe5iwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAK6So//Nwsb/3tnZ/sjIyA4AAAAAwKu0nbmrse++sLbyw7S788Cy
        ue++r7bqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACTjo//sq2t/86/
        xv/JqLzuwqO4GQAAAAAAAAAAAAAAAAAAAACgjJj/yq69/9rR0//e19jhAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACTjo//yMDD/8qyv//GoLfuwZyzfMahsxvDnrA3xJ21tMmmu/zQwcj/7OXm/9POzmMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJOOj//GwsLnyb7C/8u0wP/Jqbv/yKK5/8ikuv/Jrr7/08TL/+fh4//Y09O5AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOOj//GwsLIyMLD/8m/w//JvML/0cXJ/9nR0//b1db8087Olv//
        /wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJOPj4CZlZe8sq2vr7WusMe3sbPCsq2vn6Gb
        nlwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////gAA//gAAD/4AAAf8AAAB/AAAAfwAAAH8AAAB/AAAAfwAAAH8AA
        AB/AAAAfwAAAH8AAAB/AAAAfwAAAD8AAAAfAAAADwAAAA+AAAAPgAAAD/h+AA/4fgAP+H4AH/h+ED/4P
        D///AA///wAf//+AH///wH////////////8=
</value>
  </data>
</root>